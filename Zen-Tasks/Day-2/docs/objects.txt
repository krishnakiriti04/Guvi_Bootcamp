Objects are the most-important data types in javascript and form the building blocks for modern javascript.
Objects mostly comprises of primitive data-types, arrays are one example of objects.
An object, is a reference data type, Variables that are assigned a reference value are given a reference or a pointer to that value. That reference or pointer points to the location in memory where the object is stored. The variables don’t actually store the value.
objects in JavaScript may be defined as an unordered collection of related data, of primitive or reference types, in the form of “key: value” pairs. 
These keys can be variables or functions and are called properties and methods, respectively, in the context of an object.
An object can be created with figure brackets {…} with an optional list of properties. A property is a “key: value” pair, where a key is a string (also called a “property name”), and value can be anything.

example:
var obj = {
"firstname":"Krishna",
"lastname":"Kireeti",
"age":24,
"country":"India"}

here firstname,lastname,age,country are the keys and krishna,kireeti,24,India are the values to the corresponding keys

Each of these keys is referred to as properties of the object. 
An object in JavaScript may also have a function as a member, in which case it will be known as a method of that object.

var obj = {
"firstname":"Krishna",
"lastname":"Kireeti",
"age":24,
"country":"India",
"info":function(){
console.log("Firstname: " +obj.firstname+"age: "+obj.age);
}}

obj.info(); //calling the function inside the object using dot-notation
output: Firstname : Krishna age:24

obj["lastname"] //calling lastname using bracket notation
output: Kireeti


